#!/usr/bin/env node

const request = require('request');
const opn = require('opn');
const { exec } = require('child_process');

function colorTextLog(text, color) { 
	return `\x1b[${color}m${text}\x1b[0m`; 
}

async function getUserDetails(userDetails){
	
  	return new Promise(function(resolve){
		exec('git config --list', (error, stdout, stderr) => {
			var array_stdout = stdout.split("\n");
			for(var single_info of array_stdout){
				var info_splitted = single_info.split("=");
				if(info_splitted[0] === 'user.name'){
					userDetails['username'] = info_splitted[1];
				}

				if(info_splitted[0] === 'user.email'){
					userDetails['user_email'] = info_splitted[1];
				}

				if(info_splitted[0] === 'remote.origin.url'){
					userDetails['repo_name'] = info_splitted[1].split("https://github.com/")[1].split("/")[1].split(".")[0];
				}
			}

			resolve();
		});
  	});
}

function getWorkflows(userDetails){
    var opts = {
        url: 'https://api.github.com/repos/'+userDetails['username']+'/'+userDetails['repo_name']+'/actions/workflows',
        headers: {
            'User-Agent': 'request'
        }
    };

    return new Promise(function(resolve, reject) {
        request(opts, function(error, response, body){
            // console.log(JSON.parse(response['body'])['workflows']);
            resolve(JSON.parse(response['body'])['workflows']);
        });
    });
}

function getMyWorkflow(allWorkflowsInRepo){
    var myWorkflow;
    for(var workflow of allWorkflowsInRepo){
        if(workflow['name'] === '.github/workflows/workflow.yml'){
            myWorkflow = workflow;
        }
    }
    return myWorkflow;
}

function getURLOfMyWorkflowRun(userDetails, myWorkflow){
    var opts = {
        url: 'https://api.github.com/repos/'+userDetails['username']+'/'+userDetails['repo_name']+'/actions/workflows/'+myWorkflow['id']+'/runs',
        headers: {
            'User-Agent': 'request'
        }
    };

    return new Promise(function(resolve, reject) {
        request(opts, async function(error, response, body){
            // console.log(JSON.parse(response['body']));
            resolve(JSON.parse(response['body'])['workflow_runs'][0]['html_url']);
        });
    });
}

(async function(){
    var userDetails = {};
    await getUserDetails(userDetails);
    var allWorkflowsInRepo = await getWorkflows(userDetails);
    var myWorkflow = getMyWorkflow(allWorkflowsInRepo);
    var urlOfMyWorkflowRun = await getURLOfMyWorkflowRun(userDetails, myWorkflow);
    console.log();
    console.log("**************************You can have a look at the workflow run using the below url:**************************");
    console.log();
    console.log(colorTextLog(urlOfMyWorkflowRun, 95));
    console.log();
    console.log("Opening the link in browser...");
    setTimeout(function(){
        opn(urlOfMyWorkflowRun)},
        1500);
})();